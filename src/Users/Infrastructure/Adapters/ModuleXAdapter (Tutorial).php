<?php

// Связь модулей при помощи предохранительного слоя. Модуль Users играет роль клиента, а ModuleX играет роль поставщика. Благодаря адаптеру происходит коммуникация между модулями. В классе адаптера можно использовать любые зависимости из внешних модулей, но эти зависимости можно использовать только в рамках адаптера, снаружи внутри модуля пользователя мы ничего должны знать о внешних модулях.

declare(strict_types=1);

namespace App\Users\Infrastructure\Adapters;

use App\ModuleX\Infrastructure\API\API;

class ModuleXAdapter
{
    public function __construct(private API $moduleXApi)
    { // private - инкапсуляция данных
    }

    // Создадим публичный метод, который будет играть роль конвертации данных пришедших из внешнего модуля во внутреннее представление.
    public function getSomeData(): array
    {
        // получаем данные из внешнего модуля
        $this->moduleXApi->getSomeData();

        // выполняем маппинг данных (превращение внешних данных во внутреннее представление пользователя) и возвращаем преобразованные данные
        return [];
    }
}
